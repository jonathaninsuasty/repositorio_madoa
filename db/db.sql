-- MySQL Script generated by MySQL Workbench
-- Thu Jul  2 15:18:16 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

-- -----------------------------------------------------
-- Schema repositorio
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema repositorio
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS repositorio DEFAULT CHARACTER SET utf8;
USE repositorio ;

-- -----------------------------------------------------
-- Table repositorio.areas
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.areas (
  idarea INT NOT NULL,
  descarea VARCHAR(45) NULL,
  state INT NULL,
  PRIMARY KEY (idarea))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.componentes
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.componentes (
  idcomponente INT NOT NULL,
  componentedesc VARCHAR(45) NULL,
  state INT NULL,
  idarea INT NOT NULL,
  PRIMARY KEY (idcomponente, idarea),
  INDEX fk_categorias_areas_conocimiento_idx (idarea ASC),
  CONSTRAINT fk_categorias_areas_conocimiento
    FOREIGN KEY (idarea)
    REFERENCES repositorio.areas (idarea)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.competencias
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.competencias (
  idcompetencia INT NOT NULL,
  competenciadesc VARCHAR(45) NULL,
  state INT NULL,
  PRIMARY KEY (idcompetencia))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.roles
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.roles (
  idrole INT NOT NULL,
  descrol VARCHAR(45) NULL,
  PRIMARY KEY (idrole))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.usuarios
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.usuarios (
  idusuarios INT NOT NULL,
  email VARCHAR(45) NULL,
  password VARCHAR(45) NULL,
  state VARCHAR(45) NULL,
  idrole INT NOT NULL,
  PRIMARY KEY (idusuarios, idrole),
  INDEX fk_usuarios_roles1_idx (idrole ASC),
  CONSTRAINT fk_usuarios_roles1
    FOREIGN KEY (idrole)
    REFERENCES repositorio.roles (idrole)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.referencias
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.referencias (
  idreferencias INT NOT NULL,
  descreferencia VARCHAR(45) NULL,
  PRIMARY KEY (idreferencias))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.tipo_ova
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.tipo_ova (
  idtipo_ova INT NOT NULL,
  desctipo VARCHAR(45) NULL,
  state VARCHAR(45) NULL,
  PRIMARY KEY (idtipo_ova))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.subtipo_ova
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.subtipo_ova (
  idsubtipo_ova INT NOT NULL,
  descsubtipo VARCHAR(45) NULL,
  state VARCHAR(45) NULL,
  tipo_ova INT NOT NULL,
  PRIMARY KEY (idsubtipo_ova, tipo_ova),
  INDEX fk_subtipo_ova_tipo_ova1_idx (tipo_ova ASC),
  CONSTRAINT fk_subtipo_ova_tipo_ova1
    FOREIGN KEY (tipo_ova)
    REFERENCES repositorio.tipo_ova (idtipo_ova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.rango_edades
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.rango_edades (
  idrango INT NOT NULL,
  edadmin INT NULL,
  edadmax INT NULL,
  state INT NULL,
  PRIMARY KEY (idrango))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.autores
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.autores (
  idautor INT NOT NULL,
  primernombre VARCHAR(45) NULL,
  segundonombre VARCHAR(45) NULL,
  primerapeliido VARCHAR(45) NULL,
  segundoapellido VARCHAR(45) NULL,
  state VARCHAR(45) NULL,
  idusuario INT NOT NULL,
  PRIMARY KEY (idautor, idusuario),
  INDEX fk_autores_usuarios1_idx (idusuario ASC),
  CONSTRAINT fk_autores_usuarios1
    FOREIGN KEY (idusuario)
    REFERENCES repositorio.usuarios (idusuarios)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.licencias
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.licencias (
  idlicencia INT NOT NULL,
  desclicencia VARCHAR(45) NULL,
  state INT NULL,
  PRIMARY KEY (idlicencia))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.requerimientos
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.requerimientos (
  idrequerimiento INT NOT NULL,
  descrequerimiento VARCHAR(45) NULL,
  PRIMARY KEY (idrequerimiento))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.formatos
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.formatos (
  idformato INT NOT NULL,
  descformato VARCHAR(45) NULL,
  PRIMARY KEY (idformato))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.idiomas
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.idiomas (
  ididioma INT NOT NULL,
  descidioma VARCHAR(45) NULL,
  PRIMARY KEY (ididioma))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.niveles_academicos
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.niveles_academicos (
  idnivel INT NOT NULL,
  descnivel VARCHAR(45) NULL,
  PRIMARY KEY (idnivel))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.grados
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.grados (
  idgrado INT NOT NULL,
  descgrado VARCHAR(45) NULL,
  PRIMARY KEY (idgrado))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.ovas
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.ovas (
  idova INT NOT NULL,
  titulo VARCHAR(45) NULL,
  descova VARCHAR(45) NULL,
  version VARCHAR(45) NULL,
  fechaova DATE NULL,
  uri VARCHAR(4000) NULL,
  idsubtipo INT NOT NULL,
  idlicencia INT NOT NULL,
  ididioma INT NOT NULL,
  idformato INT NOT NULL,
  idcomponente INT NOT NULL,
  idnivel INT NOT NULL,
  idgrado INT NOT NULL,
  PRIMARY KEY (idova, idsubtipo, idlicencia, ididioma, idformato, idcomponente, idnivel, idgrado),
  INDEX fk_ovas_tipo_ova1_idx (idsubtipo ASC),
  INDEX fk_ovas_licencias1_idx (idlicencia ASC),
  INDEX fk_ovas_idiomas1_idx (ididioma ASC),
  INDEX fk_ovas_formatos1_idx (idformato ASC),
  INDEX fk_ovas_componentes1_idx (idcomponente ASC),
  INDEX fk_ovas_niveles_academicos1_idx (idnivel ASC),
  INDEX fk_ovas_grados1_idx (idgrado ASC),
  CONSTRAINT fk_ovas_tipo_ova1
    FOREIGN KEY (idsubtipo)
    REFERENCES repositorio.subtipo_ova (idsubtipo_ova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_ovas_licencias1
    FOREIGN KEY (idlicencia)
    REFERENCES repositorio.licencias (idlicencia)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_ovas_idiomas1
    FOREIGN KEY (ididioma)
    REFERENCES repositorio.idiomas (ididioma)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_ovas_formatos1
    FOREIGN KEY (idformato)
    REFERENCES repositorio.formatos (idformato)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_ovas_componentes1
    FOREIGN KEY (idcomponente)
    REFERENCES repositorio.componentes (idcomponente)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_ovas_niveles_academicos1
    FOREIGN KEY (idnivel)
    REFERENCES repositorio.niveles_academicos (idnivel)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_ovas_grados1
    FOREIGN KEY (idgrado)
    REFERENCES repositorio.grados (idgrado)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.edades_ovas
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.edades_ovas (
  idova INT NOT NULL,
  idrango INT NOT NULL,
  PRIMARY KEY (idova, idrango),
  INDEX fk_edades_ovas_rango_edades1_idx (idrango ASC),
  CONSTRAINT fk_edades_ovas_ovas1
    FOREIGN KEY (idova)
    REFERENCES repositorio.ovas (idova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_edades_ovas_rango_edades1
    FOREIGN KEY (idrango)
    REFERENCES repositorio.rango_edades (idrango)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.referencias_ovas
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.referencias_ovas (
  idova INT NOT NULL,
  idreferencia INT NOT NULL,
  PRIMARY KEY (idova, idreferencia),
  INDEX fk_referencias_ovas_referencias1_idx (idreferencia ASC),
  CONSTRAINT fk_edades_ovas_ovas10
    FOREIGN KEY (idova)
    REFERENCES repositorio.ovas (idova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_referencias_ovas_referencias1
    FOREIGN KEY (idreferencia)
    REFERENCES repositorio.referencias (idreferencias)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.requerimientos_ovas
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.requerimientos_ovas (
  idova INT NOT NULL,
  idrequerimiento INT NOT NULL,
  PRIMARY KEY (idova, idrequerimiento),
  INDEX fk_calificaciones_ovas_copy1_requerimientos1_idx (idrequerimiento ASC),
  CONSTRAINT fk_calificaciones_ovas_ovas10
    FOREIGN KEY (idova)
    REFERENCES repositorio.ovas (idova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_calificaciones_ovas_copy1_requerimientos1
    FOREIGN KEY (idrequerimiento)
    REFERENCES repositorio.requerimientos (idrequerimiento)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.comentarios_ovas
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.comentarios_ovas (
  idcomentario INT NOT NULL,
  desccomentario VARCHAR(45) NULL,
  fechacomentario DATE NULL,
  idova INT NOT NULL,
  autores_idautor INT NOT NULL,
  PRIMARY KEY (idcomentario, idova, autores_idautor),
  INDEX fk_comentarios_ovas_ovas1_idx (idova ASC),
  INDEX fk_comentarios_ovas_autores1_idx (autores_idautor ASC),
  CONSTRAINT fk_comentarios_ovas_ovas1
    FOREIGN KEY (idova)
    REFERENCES repositorio.ovas (idova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_comentarios_ovas_autores1
    FOREIGN KEY (autores_idautor)
    REFERENCES repositorio.autores (idautor)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.criterios_calificacion
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.criterios_calificacion (
  idcriterio INT NOT NULL,
  criteriodesc VARCHAR(45) NULL,
  PRIMARY KEY (idcriterio))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.calificaciones
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.calificaciones (
  calificacion INT NOT NULL,
  ovas_idova INT NOT NULL,
  idcriterio INT NOT NULL,
  PRIMARY KEY (calificacion, ovas_idova, idcriterio),
  INDEX fk_calificaciones_ovas1_idx (ovas_idova ASC),
  INDEX fk_calificaciones_criterios_calificacion1_idx (idcriterio ASC),
  CONSTRAINT fk_calificaciones_ovas1
    FOREIGN KEY (ovas_idova)
    REFERENCES repositorio.ovas (idova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_calificaciones_criterios_calificacion1
    FOREIGN KEY (idcriterio)
    REFERENCES repositorio.criterios_calificacion (idcriterio)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.competencias_ovas
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.competencias_ovas (
  idcompetencia INT NOT NULL,
  idova INT NOT NULL,
  PRIMARY KEY (idcompetencia, idova),
  INDEX fk_competencias_ovas_ovas1_idx (idova ASC),
  CONSTRAINT fk_competencias_ovas_competencias1
    FOREIGN KEY (idcompetencia)
    REFERENCES repositorio.competencias (idcompetencia)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_competencias_ovas_ovas1
    FOREIGN KEY (idova)
    REFERENCES repositorio.ovas (idova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.tecnologias
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.tecnologias (
  idtecnologia INT NOT NULL,
  desctecnologia VARCHAR(45) NULL,
  PRIMARY KEY (idtecnologia))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.tecnologias_ovas
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.tecnologias_ovas (
  tecnologias_idtecnologia INT NOT NULL,
  ovas_idova INT NOT NULL,
  PRIMARY KEY (tecnologias_idtecnologia, ovas_idova),
  INDEX fk_tecnologias_ovas_ovas1_idx (ovas_idova ASC),
  CONSTRAINT fk_tecnologias_ovas_tecnologias1
    FOREIGN KEY (tecnologias_idtecnologia)
    REFERENCES repositorio.tecnologias (idtecnologia)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_tecnologias_ovas_ovas1
    FOREIGN KEY (ovas_idova)
    REFERENCES repositorio.ovas (idova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.favoritos
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.favoritos (
  idusuarios INT NOT NULL,
  ovas_idova INT NOT NULL,
  PRIMARY KEY (idusuarios, ovas_idova),
  INDEX fk_favoritos_ovas1_idx (ovas_idova ASC),
  CONSTRAINT fk_favoritos_usuarios1
    FOREIGN KEY (idusuarios)
    REFERENCES repositorio.usuarios (idusuarios)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_favoritos_ovas1
    FOREIGN KEY (ovas_idova)
    REFERENCES repositorio.ovas (idova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table repositorio.keywords
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS repositorio.keywords (
  idova INT NOT NULL,
  keyword VARCHAR(45) NULL,
  PRIMARY KEY (idova),
  CONSTRAINT fk_keywords_ovas1
    FOREIGN KEY (idova)
    REFERENCES repositorio.ovas (idova)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
